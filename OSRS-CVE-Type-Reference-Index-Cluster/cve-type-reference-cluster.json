{
  "category": "osrs-cve-index",
  "description": "This galaxy is for the indexing of botnets.",
  "name": "OSRS CVE Index",
  "source": "Open Sources",
  "type": "osrs-cve-index",
  "uuid": "a8e14a9a-b531-11e9-a2a3-2a2ae2dbcce4",
  "values": [
	{
      "description": "Test place holder",
      "meta": {
        "refs": [
          "https://en.wikipedia.org/wiki/Common_Vulnerabilities_and_Exposures"
        ]
      },
      "uuid": "438240b8-b532-11e9-a2a3-2a2ae2dbcce4",
      "value": "Test CVE Value"
    },
	{
      "description": "An attempt to cause system error by exceding memory allocated to integers.",
      "meta": {
        "refs": [
          "https://en.wikipedia.org/wiki/Common_Vulnerabilities_and_Exposures"
        ]
      },
      "uuid": "b10b4e72-b532-11e9-a2a3-2a2ae2dbcce4",
      "value": "Integer Overflow"
    },
	{
      "description": "An attempt to remotely access sensitive information on the target system.",
      "meta": {
        "refs": [
          "https://en.wikipedia.org/wiki/Common_Vulnerabilities_and_Exposures"
        ]
      },
      "uuid": "b10b50d4-b532-11e9-a2a3-2a2ae2dbcce4",
      "value": "Remote Information Disclosure"
    },
	{
      "description": "HTML injection is a type of injection issue that occurs when a user is able to control an input point and is able to inject arbitrary HTML code into a vulnerable web page.",
      "meta": {
        "refs": [
          "https://en.wikipedia.org/wiki/Common_Vulnerabilities_and_Exposures",
		  "https://www.owasp.org/index.php/Testing_for_HTML_Injection_(OTG-CLIENT-003)"
        ]
      },
      "uuid": "b10b5232-b532-11e9-a2a3-2a2ae2dbcce4",
      "value": "HTML Injection"
    },
	{
      "description": "An attempt to escalate privileges on the local system or application.",
      "meta": {
        "refs": [
          "https://en.wikipedia.org/wiki/Common_Vulnerabilities_and_Exposures"
        ]
      },
      "uuid": "b10b53cc-b532-11e9-a2a3-2a2ae2dbcce4",
      "value": "Local Privilege Escalation"
    },
	{
      "description": "Attempt to remotely cause a buffer to excede its memory allocation in order to cause the system or application to malfunction.",
      "meta": {
        "refs": [
          "https://en.wikipedia.org/wiki/Common_Vulnerabilities_and_Exposures"
        ]
      },
      "uuid": "b10b5516-b532-11e9-a2a3-2a2ae2dbcce4",
      "value": "Remote Buffer Overflow"
    },
	{
      "description": "The software reads data past the end, or before the beginning, of the intended buffer. Typically, this can allow attackers to read sensitive information from other memory locations or cause a crash.",
      "meta": {
        "refs": [
          "https://en.wikipedia.org/wiki/Common_Vulnerabilities_and_Exposures",
		  "https://cwe.mitre.org/data/definitions/125.html"
        ]
      },
      "uuid": "6e13661c-b533-11e9-a2a3-2a2ae2dbcce4",
      "value": "Out of Bounds Read"
    },
	{
      "description": "An out of bounds read with the intent to cause a denial of service event.",
      "meta": {
        "refs": [
          "https://en.wikipedia.org/wiki/Common_Vulnerabilities_and_Exposures"
        ]
      },
      "uuid": "6e136888-b533-11e9-a2a3-2a2ae2dbcce4",
      "value": "Out of Bounds Read Denial of Service"
    },
	{
      "description": "A vulnerability that allows for the execution of code over a network.",
      "meta": {
        "refs": [
          "https://en.wikipedia.org/wiki/Common_Vulnerabilities_and_Exposures",
		  "https://en.wikipedia.org/wiki/Arbitrary_code_execution"
        ]
      },
      "uuid": "6e1369e6-b533-11e9-a2a3-2a2ae2dbcce4",
      "value": "Remote Code Execution"
    },
	{
      "description": "Vulnerability that allows for unauthorized access to system(s), applications(s), or system resource(s)",
      "meta": {
        "refs": [
          "https://en.wikipedia.org/wiki/Common_Vulnerabilities_and_Exposures"
        ]
      },
      "uuid": "6e136b8a-b533-11e9-a2a3-2a2ae2dbcce4",
      "value": "Unauthorized Access"
    },
	{
      "description": "A vulnerability that allows access to sensitive information.",
      "meta": {
        "refs": [
          "https://en.wikipedia.org/wiki/Common_Vulnerabilities_and_Exposures"
        ]
      },
      "uuid": "6e136d06-b533-11e9-a2a3-2a2ae2dbcce4",
      "value": "Information Disclosure"
    },
	{
      "description": "A vulnerability in memory that allows for the misuse of integer space allocation.",
      "meta": {
        "refs": [
          "https://en.wikipedia.org/wiki/Common_Vulnerabilities_and_Exposures"
        ]
      },
      "uuid": "df26fdb8-b534-11e9-a2a3-2a2ae2dbcce4",
      "value": "Integer Underflow"
    },
	{
      "description": "Vulnerability that allows for the injection of SQL commands.",
      "meta": {
        "refs": [
          "https://en.wikipedia.org/wiki/Common_Vulnerabilities_and_Exposures"
        ]
      },
      "uuid": "df27001a-b534-11e9-a2a3-2a2ae2dbcce4",
      "value": "SQL Injection"
    },
	{
      "description": "The product does not validate or incorrectly validates input that can affect the control flow or data flow of a program.",
      "meta": {
        "refs": [
          "https://en.wikipedia.org/wiki/Common_Vulnerabilities_and_Exposures",
		  "https://cwe.mitre.org/data/definitions/20.html"
        ]
      },
      "uuid": "df27016e-b534-11e9-a2a3-2a2ae2dbcce4",
      "value": "Improper Form Validation"
    },
	{
      "description": "A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold or when a program attempts to put data in a memory area past a buffer.",
      "meta": {
        "refs": [
          "https://en.wikipedia.org/wiki/Common_Vulnerabilities_and_Exposures",
		  "https://www.owasp.org/index.php/Buffer_Overflow"
        ]
      },
      "uuid": "df2704ca-b534-11e9-a2a3-2a2ae2dbcce4",
      "value": "Buffer Overflow"
    },
	{
      "description": "A directory traversal (or path traversal) consists in exploiting insufficient security validation (or) sanitization of user-supplied input file names, such that characters representing traverse to parent directory are passed through to the file APIs.",
      "meta": {
        "refs": [
          "https://en.wikipedia.org/wiki/Common_Vulnerabilities_and_Exposures",
		  "https://en.wikipedia.org/wiki/Directory_traversal_attack"
        ]
      },
      "uuid": "df270614-b534-11e9-a2a3-2a2ae2dbcce4",
      "value": "Directory Traversal"
    },
	{
      "description": "Arbitrary code execution (ACE) is used to describe an attacker ability to execute arbitrary commands or code on a target machine or in a target process.",
      "meta": {
        "refs": [
          "https://en.wikipedia.org/wiki/Common_Vulnerabilities_and_Exposures",
		  "https://en.wikipedia.org/wiki/Arbitrary_code_execution"
        ]
      },
      "uuid": "25e66738-b536-11e9-a2a3-2a2ae2dbcce4",
      "value": "Arbitrary Command Execution"
    },
	{
      "description": "Cross-Site Scripting (XSS) attacks are a type of injection, in which malicious scripts are injected into otherwise benign and trusted websites.",
      "meta": {
        "refs": [
          "https://en.wikipedia.org/wiki/Common_Vulnerabilities_and_Exposures",
		  "https://www.owasp.org/index.php/Cross-site_Scripting_(XSS)"
        ]
      },
      "uuid": "25e66fee-b536-11e9-a2a3-2a2ae2dbcce4",
      "value": "Cross-Site Scripting (XSS)"
    },
	{
      "description": "Use of HTTP protocol to achieve unauthenticated remote access to the system.",
      "meta": {
        "refs": [
          "https://en.wikipedia.org/wiki/Common_Vulnerabilities_and_Exposures"
        ]
      },
      "uuid": "25e67188-b536-11e9-a2a3-2a2ae2dbcce4",
      "value": "Unauthenticated Remote Access via HTTP"
    },
	{
      "description": "Vulnerability that allows for the injection of crafted messages to the system.",
      "meta": {
        "refs": [
          "https://en.wikipedia.org/wiki/Common_Vulnerabilities_and_Exposures"
        ]
      },
      "uuid": "25e672c8-b536-11e9-a2a3-2a2ae2dbcce4",
      "value": "Polymorphic Typing"
    },
	{
      "description": "XSS that does not require authentication to exploit the vulnerable system.",
      "meta": {
        "refs": [
          "https://en.wikipedia.org/wiki/Common_Vulnerabilities_and_Exposures"
        ]
      },
      "uuid": "25e673f4-b536-11e9-a2a3-2a2ae2dbcce4",
      "value": "Authenticated Persistent Cross-Site Scripting (XSS)"
    },
	{
      "description": "Stack overflows occur when variable size data is copied into fixed length buffers located on the program stack without any bounds checking.",
      "meta": {
        "refs": [
          "https://en.wikipedia.org/wiki/Common_Vulnerabilities_and_Exposures",
		  "https://www.owasp.org/index.php/Testing_for_Stack_Overflow"
        ]
      },
      "uuid": "4a29d3e0-b537-11e9-a2a3-2a2ae2dbcce4",
      "value": "Stack Overflow"
    },
	{
      "description": "Memory corruption can be described as the vulnerability that may occur in a computer system when its memory is altered without an explicit assignment. The contents of a memory location are modified due to programming errors which enable attackers to execute an arbitrary code.",
      "meta": {
        "refs": [
          "https://en.wikipedia.org/wiki/Common_Vulnerabilities_and_Exposures",
		  "https://economictimes.indiatimes.com/definition/memory-corruption"
        ]
      },
      "uuid": "4a29d624-b537-11e9-a2a3-2a2ae2dbcce4",
      "value": "Memory Corruption"
    },
	{
      "description": "A heap overflow or heap overrun is a type of buffer overflow that occurs in the heap data area. Heap overflows are exploitable in a different manner to that of stack-based overflows. Memory on the heap is dynamically allocated by the application at run-time and typically contains program data. Exploitation is performed by corrupting this data in specific ways to cause the application to overwrite internal structures such as linked list pointers. The canonical heap overflow technique overwrites dynamic memory allocation linkage (such as malloc meta data) and uses the resulting pointer exchange to overwrite a program function pointer.",
      "meta": {
        "refs": [
          "https://en.wikipedia.org/wiki/Common_Vulnerabilities_and_Exposures",
		  "https://en.wikipedia.org/wiki/Heap_overflow"
        ]
      },
      "uuid": "4a29d778-b537-11e9-a2a3-2a2ae2dbcce4",
      "value": "Heap Overflow"
    },
	{
      "description": "Vulnerability that allows for the sending of malformed TCP options with the intent on causing denial of service events.",
      "meta": {
        "refs": [
          "https://en.wikipedia.org/wiki/Common_Vulnerabilities_and_Exposures"
        ]
      },
      "uuid": "4a29d8ae-b537-11e9-a2a3-2a2ae2dbcce4",
      "value": "TCP Connection DoS via Malformed TCP Options"
    },
	{
      "description": "A vulnerability that allows for the system to accept unsolicited ARP replies that it would normally ignore.",
      "meta": {
        "refs": [
          "https://en.wikipedia.org/wiki/Common_Vulnerabilities_and_Exposures"
        ]
      },
      "uuid": "4a29d9da-b537-11e9-a2a3-2a2ae2dbcce4",
      "value": "Unsolicited Reverse ARP Replies"
    },
	{
      "description": "Vulnerability that allows for the manipulation of IP address assignments managed by the DHCP server.",
      "meta": {
        "refs": [
          "https://en.wikipedia.org/wiki/Common_Vulnerabilities_and_Exposures"
        ]
      },
      "uuid": "8a4b6654-b538-11e9-a2a3-2a2ae2dbcce4",
      "value": "Logical Flaw in IPv4 Assignment by the IPDHCPC DHCP client"
    },
	{
      "description": "Vulnerability that allows for denial of service events due to a flaw in the way a system parses IGMP information.",
      "meta": {
        "refs": [
          "https://en.wikipedia.org/wiki/Common_Vulnerabilities_and_Exposures"
        ]
      },
      "uuid": "8a4b68ca-b538-11e9-a2a3-2a2ae2dbcce4",
      "value": "DoS via NULL Dereference in IGMP Parsing"
    },
	{
      "description": "Vulnerability that allows for memory manipulation after it has been freed by the system.",
      "meta": {
        "refs": [
          "https://en.wikipedia.org/wiki/Common_Vulnerabilities_and_Exposures"
        ]
      },
      "uuid": "8a4b6c58-b538-11e9-a2a3-2a2ae2dbcce4",
      "value": "Use-After-Free"
    },
	{
      "description": "Vulnerability that allows for the extraction of data structures or objects from a series of bytes.",
      "meta": {
        "refs": [
          "https://en.wikipedia.org/wiki/Common_Vulnerabilities_and_Exposures",
		  "https://www.exploit-db.com/docs/english/44756-deserialization-vulnerability.pdf"
        ]
      },
      "uuid": "8a4b6dc0-b538-11e9-a2a3-2a2ae2dbcce4",
      "value": "Deserialization"
    },
	{
      "description": "Code injection is the exploitation of a computer bug that is caused by processing invalid data. Injection is used by an attacker to introduce (or inject) code into a vulnerable computer program and change the course of execution. The result of successful code injection can be disastrous, for example by allowing computer worms to propagate.",
      "meta": {
        "refs": [
          "https://en.wikipedia.org/wiki/Code_injection"
        ]
      },
      "uuid": "da556a08-c809-11e9-a32f-2a2ae2dbcce4",
      "value": "Code Injection"
    },
	{
      "description": "An exploit will commonly inject a shellcode into the target process before or at the same time as it exploits a vulnerability to gain control over the program counter. The program counter is adjusted to point to the shellcode, after which it gets executed and performs its task. Injecting the shellcode is often done by storing the shellcode in data sent over the network to the vulnerable process, by supplying it in a file that is read by the vulnerable process or through the command line or environment in the case of local exploits.",
      "meta": {
        "refs": [
          "https://en.wikipedia.org/wiki/Shellcode#Shellcode_execution_strategy"
        ]
      },
      "uuid": "da556eae-c809-11e9-a32f-2a2ae2dbcce4",
      "value": "Shell Code Execution"
    },
	{
      "description": "Form of information disclosure vulnerability that exposes information pertaining to files.",
      "meta": {
        "refs": [
          "https://en.wikipedia.org/wiki/File_inclusion_vulnerability"
        ]
      },
      "uuid": "da557016-c809-11e9-a32f-2a2ae2dbcce4",
      "value": "Arbitrary File Discolsure"
    },
	{
      "description": "A brute force attack can manifest itself in many different ways, but primarily consists in an attacker configuring predetermined values, making requests to a server using those values, and then analyzing the response. For the sake of efficiency, an attacker may use a dictionary attack (with or without mutations) or a traditional brute-force attack (with given classes of characters e.g. alphanumerical, special, case (in)sensitive). Considering a given method, number of tries, efficiency of the system which conducts the attack, and estimated efficiency of the system which is attacked the attacker is able to calculate approximately how long it will take to submit all chosen predetermined values.",
      "meta": {
        "refs": [
          "https://www.owasp.org/index.php/Brute_force_attack"
        ]
      },
      "uuid": "da557340-c809-11e9-a32f-2a2ae2dbcce4",
      "value": "Brute Force Vulnerability"
    },
	{
      "description": "A vulnerability that can manifest in various part of the OSI model that relies on credentials as a part of the system process. Exploitation discloses credential information to the attacker.",
      "meta": {
        "refs": [
          "https://www.netsparker.com/blog/web-security/information-disclosure-issues-attacks/"
        ]
      },
      "uuid": "438240b8-b532-11e9-a2a3-2a2ae2dbcce4",
      "value": "Credential Disclosure"
    },
	{
      "description": "Cross-Site Request Forgery (CSRF) is an attack that forces an end user to execute unwanted actions on a web application in which they're currently authenticated. CSRF attacks specifically target state-changing requests, not theft of data, since the attacker has no way to see the response to the forged request. With a little help of social engineering (such as sending a link via email or chat), an attacker may trick the users of a web application into executing actions of the attacker's choosing. If the victim is a normal user, a successful CSRF attack can force the user to perform state changing requests like transferring funds, changing their email address, and so forth. If the victim is an administrative account, CSRF can compromise the entire web application.",
      "meta": {
        "refs": [
          "https://www.owasp.org/index.php/Cross-Site_Request_Forgery_(CSRF)"
        ]
      },
      "uuid": "da5574b2-c809-11e9-a32f-2a2ae2dbcce4",
      "value": "Cross Site Request Forgery (CSRF)"
    },
	{
      "description": "Hardcoded Passwords, also often referred to as Embedded Credentials, are plain text passwords or other secrets in source code. Password hardcoding refers to the practice of embedding plain text (non-encrypted) passwords and other secrets (SSH Keys, DevOps secrets, etc.) into the source code. Default, hardcoded passwords may be used across many of the same devices, applications, systems, which helps simplify set up at scale, but at the same time, poses considerable cybersecurity risk.",
      "meta": {
        "refs": [
          "https://www.beyondtrust.com/resources/glossary/hardcoded-embedded-passwords"
        ]
      },
      "uuid": "da5575de-c809-11e9-a32f-2a2ae2dbcce4",
      "value": "Hard Coded Password"
    },
	{
      "description": "Vulnerabilities within code that insecurly handles string concatenation that allows attackers to exploit positions in strings.",
      "meta": {
        "refs": [
          "https://www.netsparker.com/blog/web-security/string-concatenation-format-string-vulnerabilities/"
        ]
      },
      "uuid": "da55770a-c809-11e9-a32f-2a2ae2dbcce4",
      "value": "Concatenation Bypass Vulnerability"
    },
	{
      "description": "A vulnerability that allows attackers to execute arbitrary code without the need of authentication before execution on the system.",
      "meta": {
        "refs": [
          "https://en.wikipedia.org/wiki/Arbitrary_code_execution"
        ]
      },
      "uuid": "da557a02-c809-11e9-a32f-2a2ae2dbcce4",
      "value": "Unauthenticated Code Execution"
    },
	{
      "description": "Targets vulnerable systems or applications in order to escalate privileges to the system; or, application.",
      "meta": {
        "refs": [
          "https://en.wikipedia.org/wiki/Common_Vulnerabilities_and_Exposures"
        ]
      },
      "uuid": "839af9d8-b532-11e9-a2a3-2a2ae2dbcce4",
      "value": "Priviledge Escalation"
    }
	  ],
	"version": 2
}

